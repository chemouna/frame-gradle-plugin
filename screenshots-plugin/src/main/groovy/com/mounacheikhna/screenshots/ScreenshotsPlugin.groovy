package com.mounacheikhna.screenshots

import com.android.build.gradle.AppPlugin
import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.Task
import org.gradle.api.tasks.Exec
import org.gradle.api.tasks.StopExecutionException

/**
 * Created by m.cheikhna on 31/12/2015.
 */
class ScreenshotsPlugin implements Plugin<Project> {

  private static final String TASK_PREFIX = "screenshots"
  public static final String GROUP_SCREENSHOTS = "screenshots"

  @Override
  void apply(Project project) {
    if (!hasPlugin(project, AppPlugin)) {
      throw new StopExecutionException("The 'com.android.application' plugin is required.")
    }
    project.extensions.add("screenshots", ScreenshotsExtension)

    Task allScreenshotsTask = project.tasks.create("all$TASK_PREFIX")
    allScreenshotsTask.group = GROUP_SCREENSHOTS
    allScreenshotsTask.description =
        '''Takes screenshots generated by spoon on all the connected devices for variation,
            copies them into play folder each in the right place.'''

    project.afterEvaluate {
      Task spoonTasks = project.tasks.create("allSpoonTask")
      List<String> locales = project.screenshots.locales
      String productFlavor = project.screenshots.productFlavor
      def flavorTaskName = productFlavor.capitalize()
      spoonTasks.dependsOn project.tasks.findByName("assemble$flavorTaskName")
      spoonTasks.dependsOn project.tasks.findByName("assembleAndroidTest")

      locales.each {
        Task spoonLocalTask = createSpoonRunTaskByLocale(project, it)
        spoonTasks.dependsOn spoonLocalTask
      }

      Task processTask = project.tasks.create("$it$TASK_PREFIX", ProcessSpoonOutputTask)
      Task convertImagesTask = createImageMagicAllTask(project)
      convertImagesTask.dependsOn spoonTasks
      processTask.dependsOn convertImagesTask

      allScreenshotsTask.dependsOn processTask
    }
  }

  private Task createSpoonRunTaskByLocale(Project project, String locale) {
    String productFlavor = project.screenshots.productFlavor

    //make most stuff used here dynamic
    println "project name : ${project.name}"
    String prefixApk = "${project.buildDir}/outputs/apk/app-$productFlavor-${project.screenshots.buildType}"
    println "prefixApk : $prefixApk"

    String apkPath = "$prefixApk-unaligned.apk"
    //TODO: maybe replace -unaligned part with regex match like **
    String testApkPath = "$prefixApk-androidTest-unaligned.apk"
    String spoonRunnerLibPath = "${project.rootDir}/screenshots-plugin/lib/spoon-runner-1.3.1-jar-with-dependencies.jar"
    Task task = project.tasks.create("${locale}spoonRunTask", Exec) {
      commandLine "java", "-jar", "$spoonRunnerLibPath",
          "--apk", "$apkPath", "--test-apk", "$testApkPath",
          //"--class-name", "com.mounacheikhna.screenshots.ScreenshotsTest",
          "--class-name", project.screenshots.screenshotsClass,
          "--e", "locale=$locale",
          "--sdk", "/Users/m.cheikhna/Library/Android/sdk"

    }
    task
  }

  //this is the part that i need to seperate into its own plugin -> let start by making a task
  //is the unit of a plugin enough ?
  private static Task createImageMagicAllTask(Project project) {
    Task imageMagicAll = project.tasks.create("imageMagicAll", FrameTask)
    imageMagicAll.group = GROUP_SCREENSHOTS
    imageMagicAll
  }

  static def hasPlugin(Project project, Class<? extends Plugin> plugin) {
    return project.plugins.hasPlugin(plugin)
  }
}
